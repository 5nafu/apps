<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="app.php" hash="82815e818481c2e37b5faa9d3852de00" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework" line="34" package="Default">
      <extends/>
      <name>App</name>
      <full_name>\OCA\AppFramework\App</full_name>
      <docblock line="28">
        <description>Entry point for every request in your app.</description>
        <long-description>&lt;p&gt;You can consider this as your
public static void main() method&lt;/p&gt;

&lt;p&gt;Handles all the dependency injection, controllers and output flow&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OCA\AppFramework" line="47" package="Default">
        <name>main</name>
        <full_name>main</full_name>
        <docblock line="37">
          <description>Shortcut for calling a controller method and printing the result</description>
          <long-description/>
          <tag line="37" name="param" description="the name of the controller under which it is&#10;                              stored in the DI container" type="string" variable="$controllerName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="the method that you want to call" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="an array with variables extracted from the routes" type="array" variable="$urlParams">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="param" description="an instance of a pimple container. if not passed, a&#10;                         new one will be instantiated. This can be used to&#10;                         swap or overwrite objects in the container." type="\OCA\AppFramework\Pimple" variable="$container">
            <type by_reference="false">\OCA\AppFramework\Pimple</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$controllerName</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$urlParams</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="47">
          <name>$container</name>
          <default/>
          <type>\Pimple</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="37" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $container in main()</error>
    </parse_markers>
  </file>
  <file path="controller/controller.php" hash="abcb8ac43c3ae8cfc56ca139a247a381" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="true" namespace="OCA\AppFramework\Controller" line="36" package="Default">
      <extends/>
      <name>Controller</name>
      <full_name>\OCA\AppFramework\Controller\Controller</full_name>
      <docblock line="33">
        <description>Baseclass to inherit your controllers from</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="41" namespace="OCA\AppFramework\Controller" package="Default">
        <name>$api</name>
        <default/>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="var" description="instance of the api layer" type="\OCA\AppFramework\Core\API">
            <type by_reference="false">\OCA\AppFramework\Core\API</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="43" namespace="OCA\AppFramework\Controller" package="Default">
        <name>$request</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="OCA\AppFramework\Controller" package="Default">
        <name>$urlParams</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Controller" line="50" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="46">
          <description/>
          <long-description/>
          <tag line="46" name="param" description="an api wrapper instance" type="\OCA\AppFramework\Core\API" variable="$api">
            <type by_reference="false">\OCA\AppFramework\Core\API</type>
          </tag>
          <tag line="46" name="param" description="an instance of the request" type="\OCA\AppFramework\Http\Request" variable="$request">
            <type by_reference="false">\OCA\AppFramework\Http\Request</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$api</name>
          <default/>
          <type>\OCA\AppFramework\Core\API</type>
        </argument>
        <argument line="50">
          <name>$request</name>
          <default/>
          <type>\OCA\AppFramework\Http\Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Controller" line="61" package="Default">
        <name>setURLParams</name>
        <full_name>setURLParams</full_name>
        <docblock line="57">
          <description>URL params are passed to this method from the routes dispatcher to be available via the $this-&gt;params</description>
          <long-description/>
          <tag line="57" name="param" description="the array with the params from the URL" type="array" variable="$urlParams:">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$urlParams</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Controller" line="77" package="Default">
        <name>params</name>
        <full_name>params</full_name>
        <docblock line="66">
          <description>Lets you access post and get parameters by the index</description>
          <long-description/>
          <tag line="66" name="param" description="the key which you want to access in the URL Parameter&#10;                    placeholder, $_POST or $_GET array.&#10;                    The priority how they're returned is the following:&#10;                    1. URL parameters&#10;                    2. POST parameters&#10;                    3. GET parameters" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="If the key is not found, this value will be returned" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="66" name="return" description="the content of the array" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="77">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Controller" line="102" package="Default">
        <name>getUploadedFile</name>
        <full_name>getUploadedFile</full_name>
        <docblock line="97">
          <description>Shortcut for accessing an uploaded file through the $_FILES array</description>
          <long-description/>
          <tag line="97" name="param" description="the key that will be taken from the $_FILES array" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="return" description="the file in the $_FILES element" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Controller" line="116" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="107">
          <description>Shortcut for rendering a template</description>
          <long-description/>
          <tag line="107" name="param" description="the name of the template" type="string" variable="$templateName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="param" description="the template parameters in key =&gt; value structure" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="param" description="user renders a full page, blank only your template&#10;                         admin an entry in the admin settings" type="string" variable="$renderAs">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="param" description="set additional headers" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="return" description="containing the page" type="\OCA\AppFramework\Http\TemplateResponse">
            <type by_reference="false">\OCA\AppFramework\Http\TemplateResponse</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$templateName</name>
          <default/>
          <type/>
        </argument>
        <argument line="116">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="117">
          <name>$renderAs</name>
          <default>'user'</default>
          <type/>
        </argument>
        <argument line="117">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Controller" line="136" package="Default">
        <name>renderJSON</name>
        <full_name>renderJSON</full_name>
        <docblock line="130">
          <description>Shortcut for rendering a JSON response</description>
          <long-description/>
          <tag line="130" name="param" description="the PHP array that will be put into the JSON data index" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="130" name="param" description="If you want to return an error message, pass one" type="string" variable="$errorMsg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="containing the values" type="\OCA\AppFramework\Http\JSONResponse">
            <type by_reference="false">\OCA\AppFramework\Http\JSONResponse</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$data</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="136">
          <name>$errorMsg</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="43" code="50018">No DocBlock was found for property $request</error>
      <error line="44" code="50018">No DocBlock was found for property $urlParams</error>
      <error line="46" code="50012">No short description for method __construct()</error>
      <error line="57" code="50014">Name of argument $urlParams does not match with the DocBlock's name $urlParams: in setURLParams()</error>
      <notice line="57" code="50013">Parameter $urlParams: could not be found in setURLParams()</notice>
    </parse_markers>
  </file>
  <file path="db/doesnotexistexception.php" hash="e26c67a5eb941ffecfb7762270254cbd" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Db" line="32" package="Default">
      <extends>\Exception</extends>
      <name>DoesNotExistException</name>
      <full_name>\OCA\AppFramework\Db\DoesNotExistException</full_name>
      <docblock line="28">
        <description>This is returned or should be returned when a find request does not find an
entry in the database</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Db" line="34" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="34">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="34" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="db/mapper.php" hash="d76f1213f80082c965eda6f0e7506015" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="true" namespace="OCA\AppFramework\Db" line="34" package="Default">
      <extends/>
      <name>Mapper</name>
      <full_name>\OCA\AppFramework\Db\Mapper</full_name>
      <docblock line="30">
        <description>Simple parent class for inheriting your data access layer from.</description>
        <long-description>&lt;p&gt;This class
may be subject to change in the future&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Db" line="39" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="36">
          <description/>
          <long-description/>
          <tag line="36" name="param" description="Instance of the API abstraction layer" type="\OCA\AppFramework\Core\API" variable="$api">
            <type by_reference="false">\OCA\AppFramework\Core\API</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$api</name>
          <default/>
          <type>\OCA\AppFramework\Core\API</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OCA\AppFramework\Db" line="51" package="Default">
        <name>findQuery</name>
        <full_name>findQuery</full_name>
        <docblock line="44">
          <description>Returns an db result by id</description>
          <long-description/>
          <tag line="44" name="param" description="the name of the table to query" type="string" variable="$tableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="param" description="the id of the item" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="44" name="throws" description="if the item does not exist" type="\OCA\AppFramework\Db\DoesNotExistException">
            <type by_reference="false">\OCA\AppFramework\Db\DoesNotExistException</type>
          </tag>
          <tag line="44" name="return" description="the result as row" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$tableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OCA\AppFramework\Db" line="70" package="Default">
        <name>findAllQuery</name>
        <full_name>findAllQuery</full_name>
        <docblock line="65">
          <description>Returns all entries of a table</description>
          <long-description/>
          <tag line="65" name="param" description="the name of the table to query" type="string" variable="$tableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="the result" type="\PDOStatement">
            <type by_reference="false">\PDOStatement</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$tableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OCA\AppFramework\Db" line="81" package="Default">
        <name>deleteQuery</name>
        <full_name>deleteQuery</full_name>
        <docblock line="76">
          <description>Deletes a row in a table by id</description>
          <long-description/>
          <tag line="76" name="param" description="the name of the table to query" type="string" variable="$tableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="the id of the item" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$tableName</name>
          <default/>
          <type/>
        </argument>
        <argument line="81">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OCA\AppFramework\Db" line="96" package="Default">
        <name>execute</name>
        <full_name>execute</full_name>
        <docblock line="88">
          <description>Runs an sql query</description>
          <long-description/>
          <tag line="88" name="param" description="the prepare string" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="the params which should replace the ? in the sql query" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="param" description="the maximum number of rows" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="88" name="param" description="from which row we want to start" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="88" name="return" description="the database query result" type="\PDOStatement">
            <type by_reference="false">\PDOStatement</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="96">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="96">
          <name>$offset</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="36" code="50012">No short description for method __construct()</error>
    </parse_markers>
  </file>
  <file path="core/api.php" hash="867e2570d5277647e05205af66478d6b" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Core" line="35" package="Default">
      <extends/>
      <name>API</name>
      <full_name>\OCA\AppFramework\Core\API</full_name>
      <docblock line="28">
        <description>This is used to wrap the owncloud static api calls into an object to make the
code better abstractable for use in the dependency injection container</description>
        <long-description>&lt;p&gt;Should you find yourself in need for more methods, simply inherit from this
class and add your methods&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="OCA\AppFramework\Core" package="Default">
        <name>$appName</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="43" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="39">
          <description>constructor</description>
          <long-description/>
          <tag line="39" name="param" description="the name of your application" type="string" variable="$appName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$appName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="52" package="Default">
        <name>getAppName</name>
        <full_name>getAppName</full_name>
        <docblock line="48">
          <description>used to return the appname of the set application</description>
          <long-description/>
          <tag line="48" name="return" description="the name of your application" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="61" package="Default">
        <name>getUserId</name>
        <full_name>getUserId</full_name>
        <docblock line="57">
          <description>Gets the userid of the current user</description>
          <long-description/>
          <tag line="57" name="return" description="the user id of the current user" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="69" package="Default">
        <name>activateNavigationEntry</name>
        <full_name>activateNavigationEntry</full_name>
        <docblock line="66">
          <description>Sets the current navigation entry to the currently running app</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="78" package="Default">
        <name>addScript</name>
        <full_name>addScript</full_name>
        <docblock line="74">
          <description>Adds a new javascript file</description>
          <long-description/>
          <tag line="74" name="param" description="the name of the javascript in js/ without the suffix" type="string" variable="$scriptName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$scriptName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="87" package="Default">
        <name>addStyle</name>
        <full_name>addStyle</full_name>
        <docblock line="83">
          <description>Adds a new css file</description>
          <long-description/>
          <tag line="83" name="param" description="the name of the css file in css/without the suffix" type="string" variable="$styleName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$styleName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="96" package="Default">
        <name>add3rdPartyScript</name>
        <full_name>add3rdPartyScript</full_name>
        <docblock line="92">
          <description>shorthand for addScript for files in the 3rdparty directory</description>
          <long-description/>
          <tag line="92" name="param" description="the name of the file without the suffix" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="105" package="Default">
        <name>add3rdPartyStyle</name>
        <full_name>add3rdPartyStyle</full_name>
        <docblock line="101">
          <description>shorthand for addStyle for files in the 3rdparty directory</description>
          <long-description/>
          <tag line="101" name="param" description="the name of the file without the suffix" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="114" package="Default">
        <name>getSystemValue</name>
        <full_name>getSystemValue</full_name>
        <docblock line="109">
          <description>Looks up a systemwide defined value</description>
          <long-description/>
          <tag line="109" name="param" description="the key of the value, under which it was saved" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="109" name="return" description="the saved value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="124" package="Default">
        <name>setSystemValue</name>
        <full_name>setSystemValue</full_name>
        <docblock line="119">
          <description>Sets a new systemwide value</description>
          <long-description/>
          <tag line="119" name="param" description="the key of the value, under which will be saved" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="param" description="the value that should be stored" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="124">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="135" package="Default">
        <name>setUserValue</name>
        <full_name>setUserValue</full_name>
        <docblock line="129">
          <description>Shortcut for setting a user defined value</description>
          <long-description/>
          <tag line="129" name="param" description="the key under which the value is being stored" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="param" description="the value that you want to store" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="param" description="the userId of the user that we want to store the value under, defaults to the current one" type="string" variable="$userId">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="135">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="135">
          <name>$userId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="148" package="Default">
        <name>getUserValue</name>
        <full_name>getUserValue</full_name>
        <docblock line="143">
          <description>Shortcut for getting a user defined value</description>
          <long-description/>
          <tag line="143" name="param" description="the key under which the value is being stored" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="param" description="the userId of the user that we want to store the value under, defaults to the current one" type="string" variable="$userId">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="148">
          <name>$userId</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="160" package="Default">
        <name>getTrans</name>
        <full_name>getTrans</full_name>
        <docblock line="156">
          <description>Returns the translation object</description>
          <long-description/>
          <tag line="156" name="return" description="the translation object" type="\OC_L10N">
            <type by_reference="false">\OC_L10N</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="172" package="Default">
        <name>prepareQuery</name>
        <full_name>prepareQuery</full_name>
        <docblock line="165">
          <description>Used to abstract the owncloud database access away</description>
          <long-description/>
          <tag line="165" name="param" description="the sql query with ? placeholder for params" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="param" description="the maximum number of rows" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="165" name="param" description="from which row we want to start" type="int" variable="$offset">
            <type by_reference="false">int</type>
          </tag>
          <tag line="165" name="return" description="a query object" type="\OCP\DB">
            <type by_reference="false">\OCP\DB</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$sql</name>
          <default/>
          <type/>
        </argument>
        <argument line="172">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="172">
          <name>$offset</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="182" package="Default">
        <name>getInsertId</name>
        <full_name>getInsertId</full_name>
        <docblock line="177">
          <description>Used to get the id of the just inserted element</description>
          <long-description/>
          <tag line="177" name="param" description="the name of the table where we inserted the item" type="string" variable="$tableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="return" description="the id of the inserted element" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$tableName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="193" package="Default">
        <name>linkToRoute</name>
        <full_name>linkToRoute</full_name>
        <docblock line="187">
          <description>Returns the URL for a route</description>
          <long-description/>
          <tag line="187" name="param" description="the name of the route" type="string" variable="$routeName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="param" description="an array with arguments which will be filled into the url" type="array" variable="$arguments">
            <type by_reference="false">array</type>
          </tag>
          <tag line="187" name="return" description="the url" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$routeName</name>
          <default/>
          <type/>
        </argument>
        <argument line="193">
          <name>$arguments</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="205" package="Default">
        <name>linkToAbsolute</name>
        <full_name>linkToAbsolute</full_name>
        <docblock line="198">
          <description>links to a file</description>
          <long-description/>
          <tag line="198" name="param" description="the name of the file" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="param" description="the name of the app, defaults to the current one" type="string" variable="$appName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="deprecated" description="replaced with linkToRoute()"/>
          <tag line="198" name="return" description="the url" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$file</name>
          <default/>
          <type/>
        </argument>
        <argument line="205">
          <name>$appName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="217" package="Default">
        <name>isLoggedIn</name>
        <full_name>isLoggedIn</full_name>
        <docblock line="213">
          <description>Checks if the current user is logged in</description>
          <long-description/>
          <tag line="213" name="return" description="true if logged in" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="227" package="Default">
        <name>isAdminUser</name>
        <full_name>isAdminUser</full_name>
        <docblock line="222">
          <description>Checks if a user is an admin</description>
          <long-description/>
          <tag line="222" name="param" description="the id of the user" type="string" variable="$userId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="222" name="return" description="true if admin" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="227">
          <name>$userId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="237" package="Default">
        <name>isSubAdminUser</name>
        <full_name>isSubAdminUser</full_name>
        <docblock line="232">
          <description>Checks if a user is an subadmin</description>
          <long-description/>
          <tag line="232" name="param" description="the id of the user" type="string" variable="$userId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="232" name="return" description="true if subadmin" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$userId</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="246" package="Default">
        <name>passesCSRFCheck</name>
        <full_name>passesCSRFCheck</full_name>
        <docblock line="242">
          <description>Checks if the CSRF check was correct</description>
          <long-description/>
          <tag line="242" name="return" description="true if CSRF check passed" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="256" package="Default">
        <name>isAppEnabled</name>
        <full_name>isAppEnabled</full_name>
        <docblock line="251">
          <description>Checks if an app is enabled</description>
          <long-description/>
          <tag line="251" name="param" description="the name of an app" type="string" variable="$appName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="return" description="true if app is enabled" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="256">
          <name>$appName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="266" package="Default">
        <name>log</name>
        <full_name>log</full_name>
        <docblock line="261">
          <description>Writes a function into the error log</description>
          <long-description/>
          <tag line="261" name="param" description="the error message to be logged" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="261" name="param" description="the error level" type="int" variable="$level">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$level</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="281" package="Default">
        <name>getTemplate</name>
        <full_name>getTemplate</full_name>
        <docblock line="274">
          <description>Returns a template</description>
          <long-description/>
          <tag line="274" name="param" description="the name of the template" type="string" variable="$templateName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="param" description="how it should be rendered" type="string" variable="$renderAs">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="param" description="the name of the app" type="string" variable="$appName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="return" description="a new template" type="\OCP\Template">
            <type by_reference="false">\OCP\Template</type>
          </tag>
        </docblock>
        <argument line="281">
          <name>$templateName</name>
          <default/>
          <type/>
        </argument>
        <argument line="281">
          <name>$renderAs</name>
          <default>'user'</default>
          <type/>
        </argument>
        <argument line="281">
          <name>$appName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="299" package="Default">
        <name>getLocalFilePath</name>
        <full_name>getLocalFilePath</full_name>
        <docblock line="294">
          <description>turns an owncloud path into a path on the filesystem</description>
          <long-description/>
          <tag line="294" name="param" description="path the path to the file on the oc filesystem" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="294" name="return" description="the filepath in the filesystem" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="299">
          <name>$path</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Core" line="308" package="Default">
        <name>openEventSource</name>
        <full_name>openEventSource</full_name>
        <docblock line="304">
          <description>used to return and open a new eventsource</description>
          <long-description/>
          <tag line="304" name="return" description="a new open EventSource class" type="\OC_EventSource">
            <type by_reference="false">\OC_EventSource</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="37" code="50018">No DocBlock was found for property $appName</error>
    </parse_markers>
  </file>
  <file path="http/textdownloadresponse.php" hash="d4064c43a4a981918c69fa0dc355d2d4" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Http" line="31" package="Default">
      <extends>\OCA\AppFramework\Http\DownloadResponse</extends>
      <name>TextDownloadResponse</name>
      <full_name>\OCA\AppFramework\Http\TextDownloadResponse</full_name>
      <docblock line="28">
        <description>Prompts the user to download the a textfile</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Http" package="Default">
        <name>$content</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="OCA\AppFramework\Http" package="Default">
        <name>$filename</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="OCA\AppFramework\Http" package="Default">
        <name>$contentType</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="44" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Creates a response that prompts the user to download a file which
contains the passed string</description>
          <long-description/>
          <tag line="37" name="param" description="the content that should be written into the file" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="the name that the downloaded file should have" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="the mimetype that the downloaded file should have" type="string" variable="$contentType">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="44">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="44">
          <name>$contentType</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="54" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="50">
          <description>Simply sets the headers and returns the file contents</description>
          <long-description/>
          <tag line="50" name="return" description="the file contents" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $content</error>
      <error line="34" code="50018">No DocBlock was found for property $filename</error>
      <error line="35" code="50018">No DocBlock was found for property $contentType</error>
    </parse_markers>
  </file>
  <file path="http/textresponse.php" hash="1f2c7c734d28f15a958a5329f240cf96" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Http" line="31" package="Default">
      <extends>\OCA\AppFramework\Http\Response</extends>
      <name>TextResponse</name>
      <full_name>\OCA\AppFramework\Http\TextResponse</full_name>
      <docblock line="28">
        <description>Prompts the user to download the a textfile</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Http" package="Default">
        <name>$content</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="39" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description>Creates a response that just outputs text</description>
          <long-description/>
          <tag line="35" name="param" description="the content that should be written into the file" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="49" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="45">
          <description>Simply sets the headers and returns the file contents</description>
          <long-description/>
          <tag line="45" name="return" description="the file contents" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $content</error>
    </parse_markers>
  </file>
  <file path="http/twigresponse.php" hash="2d694c5ca2112994587aa215036d413b" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Http" line="35" package="Default">
      <extends>\OCA\AppFramework\Http\TemplateResponse</extends>
      <name>TwigResponse</name>
      <full_name>\OCA\AppFramework\Http\TwigResponse</full_name>
      <docblock line="30">
        <description>Response for twig templates.</description>
        <long-description>&lt;p&gt;Do not use this directly to render your
templates, unless you want a blank page because the owncloud header and
footer won't be included&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="OCA\AppFramework\Http" package="Default">
        <name>$twig</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="45" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="39">
          <description>Instantiates the Twig Template</description>
          <long-description/>
          <tag line="39" name="param" description="an api instance" type="\OCA\AppFramework\Core\API" variable="$api">
            <type by_reference="false">\OCA\AppFramework\Core\API</type>
          </tag>
          <tag line="39" name="param" description="the name of the twig template" type="string" variable="$templateName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="an instance of the twig environment for rendering" type="\OCA\AppFramework\Http\Twig_Environment" variable="$twig">
            <type by_reference="false">\OCA\AppFramework\Http\Twig_Environment</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$api</name>
          <default/>
          <type>\OCA\AppFramework\Core\API</type>
        </argument>
        <argument line="45">
          <name>$templateName</name>
          <default/>
          <type/>
        </argument>
        <argument line="45">
          <name>$twig</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="55" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="51">
          <description>Returns the rendered result</description>
          <long-description/>
          <tag line="51" name="return" description="rendered output" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="37" code="50018">No DocBlock was found for property $twig</error>
    </parse_markers>
  </file>
  <file path="http/jsonresponse.php" hash="72c83c83f86d718e6005148219a127ab" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Http" line="31" package="Default">
      <extends>\OCA\AppFramework\Http\Response</extends>
      <name>JSONResponse</name>
      <full_name>\OCA\AppFramework\Http\JSONResponse</full_name>
      <docblock line="28">
        <description>A renderer for JSON calls</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Http" package="Default">
        <name>$name</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="OCA\AppFramework\Http" package="Default">
        <name>$data</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="37" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="51" package="Default">
        <name>setParams</name>
        <full_name>setParams</full_name>
        <docblock line="46">
          <description>Sets values in the data json array</description>
          <long-description/>
          <tag line="46" name="param" description="an array with key =&gt; value structure which will be&#10;                     transformed to JSON" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="60" package="Default">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="56">
          <description>Used to get the set parameters</description>
          <long-description/>
          <tag line="56" name="return" description="the params" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="69" package="Default">
        <name>setErrorMessage</name>
        <full_name>setErrorMessage</full_name>
        <docblock line="65">
          <description>in case we want to render an error message, also logs into the owncloud log</description>
          <long-description/>
          <tag line="65" name="param" description="the error message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="80" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="76">
          <description>Returns the rendered json</description>
          <long-description/>
          <tag line="76" name="return" description="the rendered json" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $name</error>
      <error line="34" code="50018">No DocBlock was found for property $data</error>
      <error line="37" code="50010">No DocBlock was found for method __construct()</error>
      <error line="65" code="50014">Name of argument $msg does not match with the DocBlock's name $message in setErrorMessage()</error>
      <notice line="65" code="50013">Parameter $message could not be found in setErrorMessage()</notice>
    </parse_markers>
  </file>
  <file path="http/templateresponse.php" hash="9583f265fc85e57a5dc12f03a930a93f" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Http" line="33" package="Default">
      <extends>\OCA\AppFramework\Http\Response</extends>
      <name>TemplateResponse</name>
      <full_name>\OCA\AppFramework\Http\TemplateResponse</full_name>
      <docblock line="30">
        <description>Response for a normal template</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="35" namespace="OCA\AppFramework\Http" package="Default">
        <name>$templateName</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="OCA\AppFramework\Http" package="Default">
        <name>$params</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="OCA\AppFramework\Http" package="Default">
        <name>$api</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="38" namespace="OCA\AppFramework\Http" package="Default">
        <name>$renderAs</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="protected" line="39" namespace="OCA\AppFramework\Http" package="Default">
        <name>$appName</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="47" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="param" description="an API instance" type="\OCA\AppFramework\Core\API" variable="$api">
            <type by_reference="false">\OCA\AppFramework\Core\API</type>
          </tag>
          <tag line="41" name="param" description="the name of the template" type="string" variable="$templateName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="param" description="optional if you want to include a template from&#10;                       a different app" type="string" variable="$appName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$api</name>
          <default/>
          <type>\OCA\AppFramework\Core\API</type>
        </argument>
        <argument line="47">
          <name>$templateName</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$appName</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="62" package="Default">
        <name>setParams</name>
        <full_name>setParams</full_name>
        <docblock line="57">
          <description>Sets template parameters</description>
          <long-description/>
          <tag line="57" name="param" description="an array with key =&gt; value structure which sets template&#10;                     variables" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$params</name>
          <default/>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="71" package="Default">
        <name>getParams</name>
        <full_name>getParams</full_name>
        <docblock line="67">
          <description>Used for accessing the set parameters</description>
          <long-description/>
          <tag line="67" name="return" description="the params" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="80" package="Default">
        <name>getTemplateName</name>
        <full_name>getTemplateName</full_name>
        <docblock line="76">
          <description>Used for accessing the name of the set template</description>
          <long-description/>
          <tag line="76" name="return" description="the name of the used template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="92" package="Default">
        <name>renderAs</name>
        <full_name>renderAs</full_name>
        <docblock line="85">
          <description>Sets the template page</description>
          <long-description/>
          <tag line="85" name="param" description="admin, user or blank. Admin also prints the admin&#10;                        settings header and footer, user renders the normal&#10;                        normal page including footer and header and blank&#10;                        just renders the plain template" type="string" variable="$renderAs">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$renderAs</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="101" package="Default">
        <name>getRenderAs</name>
        <full_name>getRenderAs</full_name>
        <docblock line="97">
          <description>Returns the set renderAs</description>
          <long-description/>
          <tag line="97" name="return" description="the renderAs value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="110" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="106">
          <description>Returns the rendered html</description>
          <long-description/>
          <tag line="106" name="return" description="the rendered html" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="35" code="50018">No DocBlock was found for property $templateName</error>
      <error line="36" code="50018">No DocBlock was found for property $params</error>
      <error line="37" code="50018">No DocBlock was found for property $api</error>
      <error line="38" code="50018">No DocBlock was found for property $renderAs</error>
      <error line="39" code="50018">No DocBlock was found for property $appName</error>
      <error line="41" code="50012">No short description for method __construct()</error>
    </parse_markers>
  </file>
  <file path="http/request.php" hash="cdf5f99e6081586515d198a347d46e51" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Http" line="31" package="Default">
      <extends/>
      <name>Request</name>
      <full_name>\OCA\AppFramework\Http\Request</full_name>
      <docblock line="28">
        <description>Encapsulates $_GET, $_FILES and $_POST arrays for better testability</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Http" package="Default">
        <name>$get</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="OCA\AppFramework\Http" package="Default">
        <name>$post</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="OCA\AppFramework\Http" package="Default">
        <name>$files</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="42" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description/>
          <long-description/>
          <tag line="37" name="param" description="the $_GET array" type="array" variable="$get">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="param" description="the $_POST array" type="array" variable="$post">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="param" description="the $_FILES array" type="array" variable="$files">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$get</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="42">
          <name>$post</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="43">
          <name>$files</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="56" package="Default">
        <name>getGET</name>
        <full_name>getGET</full_name>
        <docblock line="50">
          <description>Returns the get value or the default if not found</description>
          <long-description/>
          <tag line="50" name="param" description="the array key that should be looked up" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="if the key is not found, return this value" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="the value of the stored array or the default" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="56">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="71" package="Default">
        <name>getPOST</name>
        <full_name>getPOST</full_name>
        <docblock line="65">
          <description>Returns the get value or the default if not found</description>
          <long-description/>
          <tag line="65" name="param" description="the array key that should be looked up" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="if the key is not found, return this value" type="string" variable="$default">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="the value of the stored array or the default" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="84" package="Default">
        <name>getFILES</name>
        <full_name>getFILES</full_name>
        <docblock line="79">
          <description>Returns the get value of the files array</description>
          <long-description/>
          <tag line="79" name="param" description="the array key that should be looked up" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="return" description="the value of the stored array or the default" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $get</error>
      <error line="34" code="50018">No DocBlock was found for property $post</error>
      <error line="35" code="50018">No DocBlock was found for property $files</error>
      <error line="37" code="50012">No short description for method __construct()</error>
    </parse_markers>
  </file>
  <file path="http/response.php" hash="0c06575b028dfbe516a7f26ad268398c" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Http" line="31" package="Default">
      <extends/>
      <name>Response</name>
      <full_name>\OCA\AppFramework\Http\Response</full_name>
      <docblock line="28">
        <description>Baseclass for responses.</description>
        <long-description>&lt;p&gt;Also used to just send headers&lt;/p&gt;</long-description>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Http" package="Default">
        <name>$headers</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="35" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="44" package="Default">
        <name>addHeader</name>
        <full_name>addHeader</full_name>
        <docblock line="39">
          <description>Adds a new header to the response that will be called before the render
function</description>
          <long-description/>
          <tag line="39" name="param" description="header the string that will be used in the header() function" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="53" package="Default">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="49">
          <description>By default renders no output</description>
          <long-description/>
          <tag line="49" name="return" description="" type="null">
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="62" package="Default">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="58">
          <description>Returns the set headers</description>
          <long-description/>
          <tag line="58" name="return" description="the headers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $headers</error>
      <error line="35" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="http/redirectresponse.php" hash="3ea72f12fcb3c7366e1377bcd4571144" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Http" line="31" package="Default">
      <extends>\OCA\AppFramework\Http\Response</extends>
      <name>RedirectResponse</name>
      <full_name>\OCA\AppFramework\Http\RedirectResponse</full_name>
      <docblock line="28">
        <description>Prompts the user to download the a textfile</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Http" package="Default">
        <name>$redirectURL</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="39" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description>Creates a response that redirects to a url</description>
          <long-description/>
          <tag line="35" name="param" description="the url to redirect to" type="string" variable="$redirectURL">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$redirectURL</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="49" package="Default">
        <name>getRedirectURL</name>
        <full_name>getRedirectURL</full_name>
        <docblock line="46">
          <description/>
          <long-description/>
          <tag line="46" name="return" description="the url to redirect" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $redirectURL</error>
      <error line="46" code="50012">No short description for method getRedirectURL()</error>
    </parse_markers>
  </file>
  <file path="http/downloadresponse.php" hash="dcecfe07d1774cc271bec213c51511b2" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="true" namespace="OCA\AppFramework\Http" line="31" package="Default">
      <extends>\OCA\AppFramework\Http\Response</extends>
      <name>DownloadResponse</name>
      <full_name>\OCA\AppFramework\Http\DownloadResponse</full_name>
      <docblock line="28">
        <description>Prompts the user to download the a textfile</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Http" package="Default">
        <name>$content</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="34" namespace="OCA\AppFramework\Http" package="Default">
        <name>$filename</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="OCA\AppFramework\Http" package="Default">
        <name>$contentType</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Http" line="42" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="37">
          <description>Creates a response that prompts the user to download the file</description>
          <long-description/>
          <tag line="37" name="param" description="the name that the downloaded file should have" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="param" description="the mimetype that the downloaded file should have" type="string" variable="$contentType">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$filename</name>
          <default/>
          <type/>
        </argument>
        <argument line="42">
          <name>$contentType</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $content</error>
      <error line="34" code="50018">No DocBlock was found for property $filename</error>
      <error line="35" code="50018">No DocBlock was found for property $contentType</error>
    </parse_markers>
  </file>
  <file path="middleware/middlewaredispatcher.php" hash="8d6a3ccd7345990ddfd4b4a6852e9a28" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Middleware" line="34" package="Default">
      <extends/>
      <name>MiddlewareDispatcher</name>
      <full_name>\OCA\AppFramework\Middleware\MiddlewareDispatcher</full_name>
      <docblock line="31">
        <description>This class is used to store and run all the middleware in correct order</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="39" namespace="OCA\AppFramework\Middleware" package="Default">
        <name>$middlewares</name>
        <default/>
        <docblock line="36">
          <description/>
          <long-description/>
          <tag line="36" name="var" description="array containing all the middlewares" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="45" namespace="OCA\AppFramework\Middleware" package="Default">
        <name>$middlewareCounter</name>
        <default/>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="var" description="counter which tells us what middlware was executed once an exception occurs" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="51" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="48">
          <description>Constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="61" package="Default">
        <name>registerMiddleware</name>
        <full_name>registerMiddleware</full_name>
        <docblock line="57">
          <description>Adds a new middleware</description>
          <long-description/>
          <tag line="57" name="param" description="the middleware which will be added" type="\OCA\AppFramework\Middleware\Middleware" variable="$middleware">
            <type by_reference="false">\OCA\AppFramework\Middleware\Middleware</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$middleware</name>
          <default/>
          <type>\OCA\AppFramework\Middleware\Middleware</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="70" package="Default">
        <name>getMiddlewares</name>
        <full_name>getMiddlewares</full_name>
        <docblock line="66">
          <description>returns an array with all middleware elements</description>
          <long-description/>
          <tag line="66" name="return" description="the middlewares" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="83" package="Default">
        <name>beforeController</name>
        <full_name>beforeController</full_name>
        <docblock line="75">
          <description>This is being run in normal order before the controller is being
called which allows several modifications and checks</description>
          <long-description/>
          <tag line="75" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="75" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$controller</name>
          <default/>
          <type>\OCA\AppFramework\Controller\Controller</type>
        </argument>
        <argument line="83">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="108" package="Default">
        <name>afterException</name>
        <full_name>afterException</full_name>
        <docblock line="94">
          <description>This is being run when either the beforeController method or the
controller method itself is throwing an exception.</description>
          <long-description>&lt;p&gt;The middleware is asked
in reverse order to handle the exception and to return a response.
If the response is null, it is assumed that the exception could not be
handled and the error will be thrown again&lt;/p&gt;</long-description>
          <tag line="94" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="94" name="param" description="the name of the method that will be called on&#10;                           the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="the thrown exception" type="\Exception" variable="$exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="94" name="return" description="a Response object or null in case that the exception could not be&#10;handled" type="\OCA\AppFramework\Http\Response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$controller</name>
          <default/>
          <type>\OCA\AppFramework\Controller\Controller</type>
        </argument>
        <argument line="108">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$exception</name>
          <default/>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="130" package="Default">
        <name>afterController</name>
        <full_name>afterController</full_name>
        <docblock line="120">
          <description>This is being run after a successful controllermethod call and allows
the manipulation of a Response object.</description>
          <long-description>&lt;p&gt;The middleware is run in reverse order&lt;/p&gt;</long-description>
          <tag line="120" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="120" name="param" description="the name of the method that will be called on&#10;                           the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="the generated response from the controller" type="\OCA\AppFramework\Http\Response" variable="$response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
          <tag line="120" name="return" description="a Response object" type="\OCA\AppFramework\Http\Response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$controller</name>
          <default/>
          <type>\OCA\AppFramework\Controller\Controller</type>
        </argument>
        <argument line="130">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="130">
          <name>$response</name>
          <default/>
          <type>\OCA\AppFramework\Http\Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="149" package="Default">
        <name>beforeOutput</name>
        <full_name>beforeOutput</full_name>
        <docblock line="139">
          <description>This is being run after the response object has been rendered and
allows the manipulation of the output.</description>
          <long-description>&lt;p&gt;The middleware is run in reverse order&lt;/p&gt;</long-description>
          <tag line="139" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="139" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="param" description="the generated output from a response" type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="return" description="the output that should be printed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$controller</name>
          <default/>
          <type>\OCA\AppFramework\Controller\Controller</type>
        </argument>
        <argument line="149">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="149">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="middleware/twig/twigmiddleware.php" hash="bb4a8f765390880cffbd832d422fdfcd" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Middleware\Twig" line="38" package="Default">
      <extends>\OCA\AppFramework\Middleware\Middleware</extends>
      <name>TwigMiddleware</name>
      <full_name>\OCA\AppFramework\Middleware\Twig\TwigMiddleware</full_name>
      <docblock line="34">
        <description>This template is used to add the possibility to add twig templates
By default it is only loaded when the templatepath is set</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="40" namespace="OCA\AppFramework\Middleware\Twig" package="Default">
        <name>$twig</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="OCA\AppFramework\Middleware\Twig" package="Default">
        <name>$api</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="OCA\AppFramework\Middleware\Twig" package="Default">
        <name>$renderAs</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware\Twig" line="49" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="44">
          <description>Sets the twig loader instance</description>
          <long-description/>
          <tag line="44" name="param" description="an instance of the api" type="\OCA\AppFramework\Core\API" variable="$api">
            <type by_reference="false">\OCA\AppFramework\Core\API</type>
          </tag>
          <tag line="44" name="param" description="an instance of the twig environment" type="\OCA\AppFramework\Middleware\Twig\Twig_Environment" variable="$twig">
            <type by_reference="false">\OCA\AppFramework\Middleware\Twig\Twig_Environment</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$api</name>
          <default/>
          <type>\OCA\AppFramework\Core\API</type>
        </argument>
        <argument line="49">
          <name>$twig</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware\Twig" line="65" package="Default">
        <name>afterController</name>
        <full_name>afterController</full_name>
        <docblock line="55">
          <description>Swaps the template response with the twig response and stores if a
template needs to be printed for the user or admin page</description>
          <long-description/>
          <tag line="55" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="55" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="the generated response from the controller" type="\OCA\AppFramework\Http\Response" variable="$response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
          <tag line="55" name="return" description="a Response object" type="\OCA\AppFramework\Http\Response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="65">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="65">
          <name>$response</name>
          <default/>
          <type>\OCA\AppFramework\Http\Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware\Twig" line="97" package="Default">
        <name>beforeOutput</name>
        <full_name>beforeOutput</full_name>
        <docblock line="88">
          <description>In case the output is not rendered as blank page, we need to include the
owncloud header and output</description>
          <long-description/>
          <tag line="88" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="88" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="param" description="the generated output from a response" type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="return" description="the output that should be printed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="97">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="97">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <fixme line="101">unfortunately hardcoded appname</fixme>
    </markers>
    <parse_markers>
      <error line="40" code="50018">No DocBlock was found for property $twig</error>
      <error line="41" code="50018">No DocBlock was found for property $api</error>
      <error line="42" code="50018">No DocBlock was found for property $renderAs</error>
    </parse_markers>
  </file>
  <file path="middleware/middleware.php" hash="158c67468e9a9af11de1a183db753e99" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="true" namespace="OCA\AppFramework\Middleware" line="37" package="Default">
      <extends/>
      <name>Middleware</name>
      <full_name>\OCA\AppFramework\Middleware\Middleware</full_name>
      <docblock line="31">
        <description>Middleware is used to provide hooks before or after controller methods and
deal with possible exceptions raised in the controller methods.</description>
        <long-description>&lt;p&gt;They're modeled after Django's middleware system:
https://docs.djangoproject.com/en/dev/topics/http/middleware/&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="48" package="Default">
        <name>beforeController</name>
        <full_name>beforeController</full_name>
        <docblock line="40">
          <description>This is being run in normal order before the controller is being
called which allows several modifications and checks</description>
          <long-description/>
          <tag line="40" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="40" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="48">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="66" package="Default">
        <name>afterException</name>
        <full_name>afterException</full_name>
        <docblock line="53">
          <description>This is being run when either the beforeController method or the
controller method itself is throwing an exception.</description>
          <long-description>&lt;p&gt;The middleware is
asked in reverse order to handle the exception and to return a response.
If the response is null, it is assumed that the exception could not be
handled and the error will be thrown again&lt;/p&gt;</long-description>
          <tag line="53" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="53" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="the thrown exception" type="\Exception" variable="$exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="53" name="return" description="a Response object or null in case that the exception could not be handled" type="\OCA\AppFramework\Http\Response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$exception</name>
          <default/>
          <type>\Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="81" package="Default">
        <name>afterController</name>
        <full_name>afterController</full_name>
        <docblock line="71">
          <description>This is being run after a successful controllermethod call and allows
the manipulation of a Response object.</description>
          <long-description>&lt;p&gt;The middleware is run in reverse order&lt;/p&gt;</long-description>
          <tag line="71" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="71" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="the generated response from the controller" type="\OCA\AppFramework\Http\Response" variable="$response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
          <tag line="71" name="return" description="a Response object" type="\OCA\AppFramework\Http\Response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="81">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="81">
          <name>$response</name>
          <default/>
          <type>\OCA\AppFramework\Http\Response</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware" line="96" package="Default">
        <name>beforeOutput</name>
        <full_name>beforeOutput</full_name>
        <docblock line="86">
          <description>This is being run after the response object has been rendered and
allows the manipulation of the output.</description>
          <long-description>&lt;p&gt;The middleware is run in reverse order&lt;/p&gt;</long-description>
          <tag line="86" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="86" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="param" description="the generated output from a response" type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="return" description="the output that should be printed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="middleware/security/securityexception.php" hash="076a082682b2152429d9f1f700e418ce" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Middleware\Security" line="31" package="Default">
      <extends>\Exception</extends>
      <name>SecurityException</name>
      <full_name>\OCA\AppFramework\Middleware\Security\SecurityException</full_name>
      <docblock line="28">
        <description>Thrown when the security middleware encounters a security problem</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Middleware\Security" package="Default">
        <name>$ajax</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware\Security" line="39" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="param" description="the security error message" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="param" description="true if it resulted because of an ajax request" type="bool" variable="$ajax">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$msg</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$ajax</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware\Security" line="49" package="Default">
        <name>isAjax</name>
        <full_name>isAjax</full_name>
        <docblock line="45">
          <description>Used to check if a security exception occured in an ajax request</description>
          <long-description/>
          <tag line="45" name="return" description="true if exception resulted because of an ajax request" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $ajax</error>
      <error line="35" code="50012">No short description for method __construct()</error>
    </parse_markers>
  </file>
  <file path="middleware/security/securitymiddleware.php" hash="3ae2ef20dd2575e8679a96baef94d965" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Middleware\Security" line="42" package="Default">
      <extends>\OCA\AppFramework\Middleware\Middleware</extends>
      <name>SecurityMiddleware</name>
      <full_name>\OCA\AppFramework\Middleware\Security\SecurityMiddleware</full_name>
      <docblock line="36">
        <description>Used to do all the authentication and checking stuff for a controller method
It reads out the annotations of a controller method and checks which if
security things should be checked and also handles errors in case a security
check fails</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="44" namespace="OCA\AppFramework\Middleware\Security" package="Default">
        <name>$security</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="45" namespace="OCA\AppFramework\Middleware\Security" package="Default">
        <name>$api</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware\Security" line="50" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="47">
          <description/>
          <long-description/>
          <tag line="47" name="param" description="an instance of the api" type="\OCA\AppFramework\Core\API" variable="$api">
            <type by_reference="false">\OCA\AppFramework\Core\API</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$api</name>
          <default/>
          <type>\OCA\AppFramework\Core\API</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware\Security" line="63" package="Default">
        <name>beforeController</name>
        <full_name>beforeController</full_name>
        <docblock line="55">
          <description>This runs all the security checks before a method call.</description>
          <long-description>&lt;p&gt;The
security checks are determined by inspecting the controller method
annotations&lt;/p&gt;</long-description>
          <tag line="55" name="param" description="the controllername or string" type="\OCA\AppFramework\Middleware\Security\string/Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Middleware\Security\string/Controller</type>
          </tag>
          <tag line="55" name="param" description="the name of the method" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="throws" description="when a security check fails" type="\OCA\AppFramework\Middleware\Security\SecurityException">
            <type by_reference="false">\OCA\AppFramework\Middleware\Security\SecurityException</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Middleware\Security" line="120" package="Default">
        <name>afterException</name>
        <full_name>afterException</full_name>
        <docblock line="111">
          <description>If an SecurityException is being caught, ajax requests return a JSON error
response and non ajax requests redirect to the index</description>
          <long-description/>
          <tag line="111" name="param" description="the controller that is being called" type="\OCA\AppFramework\Controller\Controller" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Controller\Controller</type>
          </tag>
          <tag line="111" name="param" description="the name of the method that will be called on&#10;                          the controller" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="111" name="param" description="the thrown exception" type="\OCA\AppFramework\Middleware\Security\Exception" variable="$exception">
            <type by_reference="false">\OCA\AppFramework\Middleware\Security\Exception</type>
          </tag>
          <tag line="111" name="return" description="a Response object or null in case that the exception could not be handled" type="\OCA\AppFramework\Http\Response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$methodName</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$exception</name>
          <default/>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="136">replace with link to route</todo>
    </markers>
    <parse_markers>
      <error line="44" code="50018">No DocBlock was found for property $security</error>
      <error line="45" code="50018">No DocBlock was found for property $api</error>
      <error line="47" code="50012">No short description for method __construct()</error>
      <error line="111" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $exception in afterException()</error>
    </parse_markers>
  </file>
  <file path="utility/methodannotationreader.php" hash="81d2e1a35dd1ab84036bf3dfe891ee2f" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="false" namespace="OCA\AppFramework\Utility" line="31" package="Default">
      <extends/>
      <name>MethodAnnotationReader</name>
      <full_name>\OCA\AppFramework\Utility\MethodAnnotationReader</full_name>
      <docblock line="28">
        <description>Reads and parses annotations from doc comments</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="private" line="33" namespace="OCA\AppFramework\Utility" package="Default">
        <name>$annotations</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Utility" line="39" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="param" description="an object or classname" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="35" name="param" description="the method which we want to inspect for annotations" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$object</name>
          <default/>
          <type/>
        </argument>
        <argument line="39">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\Utility" line="56" package="Default">
        <name>hasAnnotation</name>
        <full_name>hasAnnotation</full_name>
        <docblock line="51">
          <description>Check if a method contains an annotation</description>
          <long-description/>
          <tag line="51" name="param" description="the name of the annotation" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="true if the annotation is found" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="33" code="50018">No DocBlock was found for property $annotations</error>
      <error line="35" code="50012">No short description for method __construct()</error>
    </parse_markers>
  </file>
  <file path="utility/controllertestutility.php" hash="2c768eacb98b76b9010574d095813bc0" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <class final="false" abstract="true" namespace="OCA\AppFramework\Utility" line="33" package="Default">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ControllerTestUtility</name>
      <full_name>\OCA\AppFramework\Utility\ControllerTestUtility</full_name>
      <docblock line="30">
        <description>Simple utility class for testing controllers</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OCA\AppFramework\Utility" line="42" package="Default">
        <name>getAPIMock</name>
        <full_name>getAPIMock</full_name>
        <docblock line="36">
          <description>Boilerplate function for getting an API Mock class</description>
          <long-description/>
          <tag line="36" name="param" description="the class inclusive namespace of the api that we&#10;                         want to use" type="string" variable="$apiClass">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="constructor parameters of the api class" type="array" variable="$constructor">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$apiClass</name>
          <default>'OCA\AppFramework\Core\API'</default>
          <type/>
        </argument>
        <argument line="43">
          <name>$constructor</name>
          <default>array('appname')</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OCA\AppFramework\Utility" line="55" package="Default">
        <name>assertAnnotations</name>
        <full_name>assertAnnotations</full_name>
        <docblock line="49">
          <description>Checks if a controllermethod has the expected annotations</description>
          <long-description/>
          <tag line="49" name="param" description="name or instance of the controller" type="\OCA\AppFramework\Utility\Controller/string" variable="$controller">
            <type by_reference="false">\OCA\AppFramework\Utility\Controller/string</type>
          </tag>
          <tag line="49" name="param" description="an array containing the expected annotations" type="array" variable="$expected">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="param" description="if you define your own annotations, pass them here" type="array" variable="$valid">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$controller</name>
          <default/>
          <type/>
        </argument>
        <argument line="55">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="55">
          <name>$expected</name>
          <default/>
          <type>array</type>
        </argument>
        <argument line="56">
          <name>$valid</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="OCA\AppFramework\Utility" line="84" package="Default">
        <name>assertHeaders</name>
        <full_name>assertHeaders</full_name>
        <docblock line="79">
          <description>Shortcut for testing expected headers of a response</description>
          <long-description/>
          <tag line="79" name="param" description="an array with the expected headers" type="array" variable="$expected">
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="param" description="the response which we want to test for headers" type="\OCA\AppFramework\Http\Response" variable="$response">
            <type by_reference="false">\OCA\AppFramework\Http\Response</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$expected</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="84">
          <name>$response</name>
          <default/>
          <type>\OCA\AppFramework\Http\Response</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="49" code="50014">Name of argument $method does not match with the DocBlock's name $expected in assertAnnotations()</error>
      <error line="49" code="50014">Name of argument $expected does not match with the DocBlock's name $valid in assertAnnotations()</error>
      <error line="49" code="50015">Argument $valid is missing from the Docblock of assertAnnotations()</error>
    </parse_markers>
  </file>
  <file path="dependencyinjection/dicontainer.php" hash="fd74f7dd3b30546c89b74e2b5ccce96d" package="Default">
    <docblock line="3">
      <description>ownCloud - App Framework</description>
      <long-description/>
      <tag line="3" name="author" description="Bernhard Posselt"/>
      <tag line="3" name="copyright" description="2012 Bernhard Posselt nukeawhale@gmail.com&#10;This library is free software; you can redistribute it and/or&#10;modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE&#10;License as published by the Free Software Foundation; either&#10;version 3 of the License, or any later version.&#10;This library is distributed in the hope that it will be useful,&#10;but WITHOUT ANY WARRANTY; without even the implied warranty of&#10;MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&#10;GNU AFFERO GENERAL PUBLIC LICENSE for more details.&#10;You should have received a copy of the GNU Affero General Public&#10;License along with this library.  If not, see &lt;http://www.gnu.org/licenses/&gt;."/>
    </docblock>
    <include line="34" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="OCA\AppFramework\DependencyInjection" line="45" package="Default">
      <extends>\Pimple</extends>
      <name>DIContainer</name>
      <full_name>\OCA\AppFramework\DependencyInjection\DIContainer</full_name>
      <docblock line="39">
        <description>This class extends Pimple (http://pimple.sensiolabs.org/) for reusability
To use this class, extend your own container from this.</description>
        <long-description>&lt;p&gt;Should you require it
you can overwrite the dependencies with your own classes by simply redefining
a dependency&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OCA\AppFramework\DependencyInjection" line="52" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="48">
          <description>Put your class dependencies in here</description>
          <long-description/>
          <tag line="48" name="param" description="the name of the app" type="string" variable="$appName">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$appName</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="Default" full_name="Default"/>
  <namespace name="OCA" full_name="OCA">
    <namespace name="AppFramework" full_name="OCA\AppFramework">
      <namespace name="Controller" full_name="OCA\AppFramework\Controller"/>
      <namespace name="Core" full_name="OCA\AppFramework\Core"/>
      <namespace name="Db" full_name="OCA\AppFramework\Db"/>
      <namespace name="DependencyInjection" full_name="OCA\AppFramework\DependencyInjection"/>
      <namespace name="Http" full_name="OCA\AppFramework\Http"/>
      <namespace name="Middleware" full_name="OCA\AppFramework\Middleware">
        <namespace name="Security" full_name="OCA\AppFramework\Middleware\Security"/>
        <namespace name="Twig" full_name="OCA\AppFramework\Middleware\Twig"/>
      </namespace>
      <namespace name="Utility" full_name="OCA\AppFramework\Utility"/>
    </namespace>
  </namespace>
  <marker count="1">todo</marker>
  <marker count="1">fixme</marker>
  <deprecated count="1"/>
</project>
